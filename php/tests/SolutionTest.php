<?php

use PHPUnit\Framework\TestCase;

use App\Solution;

final class SolutionTest extends TestCase
{
    public function testEmptyPaylines1(): void
    {
        $this->assertEquals(Solution::getWinningLines([], []), []);
    }

    public function testEmptyPaylines2(): void
    {
        $screen = [
            [
                9,
                8,
                1
            ],
            [
                7,
                5,
                7
            ],
            [
                6,
                8,
                7
            ],
            [
                3,
                9,
                4
            ],
            [
                6,
                4,
                3
            ]
        ];

        $this->assertEquals(Solution::getWinningLines($screen, []), []);
    }

    public function testEmptyScreen(): void
    {
        $screen = [];

        $pay_lines = [
            [
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    1
                ],
                [
                    3,
                    1
                ],
                [
                    4,
                    1
                ]
            ],
            [
                [
                    0,
                    0
                ],
                [
                    1,
                    0
                ],
                [
                    2,
                    0
                ],
                [
                    3,
                    0
                ],
                [
                    4,
                    0
                ]
            ],
            [
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    2
                ],
                [
                    4,
                    2
                ]
            ],
            [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    1
                ],
                [
                    4,
                    0
                ]
            ]
        ];

        $result = Solution::getWinningLines($screen, $pay_lines);

        $this->assertEquals($result, []);
    }

    public function testGeneralCase1(): void
    {
        $screen = [
            [
                9,
                8,
                1
            ],
            [
                7,
                5,
                7
            ],
            [
                6,
                8,
                7
            ],
            [
                3,
                9,
                4
            ],
            [
                6,
                4,
                3
            ]
        ];

        $pay_lines = [
            [
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    2
                ],
                [
                    4,
                    2
                ]
            ],
            [
                [
                    0,
                    2
                ],
                [
                    1,
                    0
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    0
                ],
                [
                    4,
                    2
                ]
            ],
        ];

        $result = Solution::getWinningLines($screen, $pay_lines);

        $this->assertEquals(array_keys($result), [1, 2]);

        $this->assertEquals($result[1]['positions'][0], [0, 2]);
        $this->assertEquals($result[1]['positions'][1], [1, 2]);
        $this->assertEquals($result[1]['positions'][2], [2, 2]);

        $this->assertEquals($result[2]['positions'][0], [0, 2]);
        $this->assertEquals($result[2]['positions'][1], [1, 0]);
        $this->assertEquals($result[2]['positions'][2], [2, 2]);

    }

    public function testGeneralCase2(): void
    {
        $screen = [
            [
                9,
                8,
                1
            ],
            [
                7,
                5,
                7
            ],
            [
                6,
                8,
                7
            ],
            [
                3,
                9,
                4
            ],
            [
                6,
                4,
                3
            ]
        ];

        $pay_lines = [
            [
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    1
                ],
                [
                    3,
                    1
                ],
                [
                    4,
                    1
                ]
            ],
            [
                [
                    0,
                    0
                ],
                [
                    1,
                    0
                ],
                [
                    2,
                    0
                ],
                [
                    3,
                    0
                ],
                [
                    4,
                    0
                ]
            ],
            [
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    2
                ],
                [
                    4,
                    2
                ]
            ],
            [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    1
                ],
                [
                    4,
                    0
                ]
            ],
            [
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    0
                ],
                [
                    3,
                    1
                ],
                [
                    4,
                    2
                ]
            ],
            [
                [
                    0,
                    1
                ],
                [
                    1,
                    2
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    2
                ],
                [
                    4,
                    1
                ]
            ],
            [
                [
                    0,
                    1
                ],
                [
                    1,
                    0
                ],
                [
                    2,
                    0
                ],
                [
                    3,
                    0
                ],
                [
                    4,
                    1
                ]
            ],
            [
                [
                    0,
                    0
                ],
                [
                    1,
                    0
                ],
                [
                    2,
                    1
                ],
                [
                    3,
                    0
                ],
                [
                    4,
                    0
                ]
            ],
            [
                [
                    0,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    2,
                    1
                ],
                [
                    3,
                    2
                ],
                [
                    4,
                    2
                ]
            ],
            [
                [
                    0,
                    1
                ],
                [
                    1,
                    0
                ],
                [
                    2,
                    1
                ],
                [
                    3,
                    0
                ],
                [
                    4,
                    1
                ]
            ],
            [
                [
                    0,
                    1
                ],
                [
                    1,
                    2
                ],
                [
                    2,
                    1
                ],
                [
                    3,
                    2
                ],
                [
                    4,
                    1
                ]
            ],
            [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    0
                ],
                [
                    3,
                    1
                ],
                [
                    4,
                    0
                ]
            ],
            [
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    1
                ],
                [
                    4,
                    2
                ]
            ],
            [
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    0
                ],
                [
                    3,
                    1
                ],
                [
                    4,
                    1
                ]
            ],
            [
                [
                    0,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    1
                ],
                [
                    4,
                    1
                ]
            ],
            [
                [
                    0,
                    0
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    1
                ],
                [
                    3,
                    1
                ],
                [
                    4,
                    0
                ]
            ],
            [
                [
                    0,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    1
                ],
                [
                    3,
                    1
                ],
                [
                    4,
                    2
                ]
            ],
            [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    2,
                    0
                ],
                [
                    3,
                    2
                ],
                [
                    4,
                    0
                ]
            ],
            [
                [
                    0,
                    2
                ],
                [
                    1,
                    0
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    0
                ],
                [
                    4,
                    2
                ]
            ],
            [
                [
                    0,
                    0
                ],
                [
                    1,
                    2
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    2
                ],
                [
                    4,
                    0
                ]
            ]
        ];

        $result = Solution::getWinningLines($screen, $pay_lines);

        $this->assertEquals(array_keys($result), [3, 19]);

        $this->assertEquals($result[3]['positions'][0], [0, 2]);
        $this->assertEquals($result[3]['positions'][1], [1, 2]);
        $this->assertEquals($result[3]['positions'][2], [2, 2]);

        $this->assertEquals($result[19]['positions'][0], [0, 2]);
        $this->assertEquals($result[19]['positions'][1], [1, 0]);
        $this->assertEquals($result[19]['positions'][2], [2, 2]);

    }
}